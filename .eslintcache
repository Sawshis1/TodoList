[{"D:\\ReductNepal\\todolist\\src\\index.js":"1","D:\\ReductNepal\\todolist\\src\\App.js":"2","D:\\ReductNepal\\todolist\\src\\components\\TodoList.js":"3","D:\\ReductNepal\\todolist\\src\\components\\Todo.js":"4","D:\\ReductNepal\\todolist\\src\\components\\TodoForm.js":"5"},{"size":199,"mtime":1610003646865,"results":"6","hashOfConfig":"7"},{"size":212,"mtime":1610003645567,"results":"8","hashOfConfig":"7"},{"size":1329,"mtime":1610003638702,"results":"9","hashOfConfig":"7"},{"size":1288,"mtime":1610005465482,"results":"10","hashOfConfig":"7"},{"size":1513,"mtime":1610003640146,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"19ppl78",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\ReductNepal\\todolist\\src\\index.js",[],["24","25"],"D:\\ReductNepal\\todolist\\src\\App.js",[],"D:\\ReductNepal\\todolist\\src\\components\\TodoList.js",[],"D:\\ReductNepal\\todolist\\src\\components\\Todo.js",["26"],"import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n        const submitUpdate = value => {\r\n            updateTodo(edit.id, value)\r\n            setEdit({\r\n                id: null,\r\n                value: '',\r\n            })\r\n        };\r\n\r\n        if (edit.id){\r\n            return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n        }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n         key={index}>\r\n             <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                 {todo.text}\r\n             </div>\r\n                <div className='icons'>\r\n                    <RiCloseCircleLine onClick={() => removeTodo(todo.id)}\r\n                    className='delete-icon' />\r\n                    <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n                    className='edit-icon' />\r\n                </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","D:\\ReductNepal\\todolist\\src\\components\\TodoForm.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":8,"nodeType":"33","messageId":"34","endLine":3,"endColumn":16},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]